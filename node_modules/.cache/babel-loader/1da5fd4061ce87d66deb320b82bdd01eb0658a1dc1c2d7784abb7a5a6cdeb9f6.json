{"ast":null,"code":"var _jsxFileName = \"/home/eng-hadeer/my-first-react-app/my-app/src/components/app/App.js\",\n  _s = $RefreshSig$();\nimport Cart1 from '../card/Card1';\nimport './App.css';\nimport React, { useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const inputRef = useRef(null);\n  const [cardToggle, setCardToggle] = useState(true);\n  const [boys, setBoys] = useState([{\n    name: \"Ahmed\",\n    age: 20,\n    address: \"Banha\",\n    phone: \"01147116571\"\n  }, {\n    name: \"Mohamed\",\n    age: 25,\n    address: \"Banha\",\n    phone: \"01272276579\"\n  }, {\n    name: \"Mahmoud\",\n    age: 30,\n    address: \"Qalub\",\n    phone: \"01110976544\"\n  }]);\n  const deleteHandel = (el, indx) => {\n    // console.log(el,indx)\n    // const deletedArray = boys.filter((el, idx) => idx !== indx)\n    // setBoys(deletedArray)\n    setBoys(prevState => {\n      return prevState.filter((el, id) => id !== indx);\n    });\n  };\n  // const [t] = UseCustom('https://jsonplaceholder.typicode.com/todos/')\n  // const data = async() => {\n\n  //    const c = await axios.get('https://jsonplaceholder.typicode.com/todos/')\n  //   console.log(c.data, \"data\")\n  // }\n  // const names = ['celia','ahmed','mahmoud']\n  // return (\n  //   <div>\n  //     {names.map((el) => {\n  //       return (\n  //       <p>{el}</p>\n\n  //       )\n  //     })}\n  //   </div>\n  // )\n  // const boys = \n  // const girls = [{name:\"Hadeer\",age:22,address:\"Fayum\",phone:\"01147116571\"},{name:\"Celia\",age:27,address:\"Banha\",phone:\"01094442602\"},{name:\"Sofia\",age:14,address:\"NYC\",phone:\"01110976544\"}]\n  const hanelCardToggle = e => {\n    // console.log(e)\n    setCardToggle(!cardToggle);\n  };\n  const testHadndler = () => {\n    console.log(inputRef);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Boys List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        marginBottom: \"20px\"\n      },\n      onClick: hanelCardToggle,\n      children: cardToggle ? \"Hide names\" : \"show names \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cardToggle ? 'show' : 'hide',\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"texr\",\n        placeholder: \"test for ref\",\n        ref: inputRef,\n        onChange: testHadndler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Cart1, {\n        names: boys,\n        type: \"men\",\n        deleteHandel: deleteHandel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"2n2/Vc+A4BOkozv3o3oPEoCpkk8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Cart1","React","useRef","useState","jsxDEV","_jsxDEV","App","_s","inputRef","cardToggle","setCardToggle","boys","setBoys","name","age","address","phone","deleteHandel","el","indx","prevState","filter","id","hanelCardToggle","e","testHadndler","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","marginBottom","onClick","type","placeholder","ref","onChange","names","_c","$RefreshReg$"],"sources":["/home/eng-hadeer/my-first-react-app/my-app/src/components/app/App.js"],"sourcesContent":["import Cart1 from '../card/Card1';\nimport './App.css';\nimport React, {useRef, useState} from 'react';\nfunction App() {\n  const inputRef = useRef(null)\n  const [cardToggle,setCardToggle] = useState(true)\n  const [boys,setBoys] = useState([{ name: \"Ahmed\", age: 20, address: \"Banha\", phone: \"01147116571\" }, { name: \"Mohamed\", age: 25, address: \"Banha\", phone: \"01272276579\" }, { name: \"Mahmoud\", age: 30, address: \"Qalub\", phone: \"01110976544\" }])\n  const deleteHandel = (el,indx) => {\n    // console.log(el,indx)\n    // const deletedArray = boys.filter((el, idx) => idx !== indx)\n    // setBoys(deletedArray)\n    setBoys((prevState) => {\n      return prevState.filter((el,id)=> id !== indx)\n    })\n  }\n  // const [t] = UseCustom('https://jsonplaceholder.typicode.com/todos/')\n  // const data = async() => {\n    \n  //    const c = await axios.get('https://jsonplaceholder.typicode.com/todos/')\n  //   console.log(c.data, \"data\")\n  // }\n  // const names = ['celia','ahmed','mahmoud']\n  // return (\n  //   <div>\n  //     {names.map((el) => {\n  //       return (\n  //       <p>{el}</p>\n          \n  //       )\n  //     })}\n  //   </div>\n  // )\n  // const boys = \n  // const girls = [{name:\"Hadeer\",age:22,address:\"Fayum\",phone:\"01147116571\"},{name:\"Celia\",age:27,address:\"Banha\",phone:\"01094442602\"},{name:\"Sofia\",age:14,address:\"NYC\",phone:\"01110976544\"}]\n  const hanelCardToggle = (e) => {\n    // console.log(e)\n    setCardToggle(!cardToggle)\n  }\n  const testHadndler = () => {\n    console.log(inputRef)\n  }\n  return (\n    <div className='main-container'>\n      <h1>Boys List</h1>\n      <button style={{ marginBottom: \"20px\" }} onClick={hanelCardToggle}>{cardToggle ? \"Hide names\" : \"show names \"}</button>\n      <div className={ cardToggle ? 'show' :'hide'}> \n        <input type=\"texr\" placeholder='test for ref' ref={ inputRef} onChange={testHadndler}></input>\n      <Cart1 names={boys} type='men' deleteHandel={ deleteHandel}></Cart1>\n      </div>\n      {/* <h1>Girls List</h1> */}\n\n    {/* <Cart1 names={girls} type='girl'></Cart1> */}\n    </div>\n    \n\n  )\n  \n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}